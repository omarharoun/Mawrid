"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tavily";
exports.ids = ["vendor-chunks/@tavily"];
exports.modules = {

/***/ "(rsc)/./node_modules/@tavily/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@tavily/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tavily: () => (/* binding */ tavily)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var js_tiktoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-tiktoken */ \"(rsc)/./node_modules/js-tiktoken/dist/index.js\");\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https-proxy-agent */ \"(rsc)/./node_modules/https-proxy-agent/dist/index.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/search.ts\n\n\n// src/utils.ts\n\n\n\nvar BASE_URL = \"https://api.tavily.com\";\nvar DEFAULT_MODEL_ENCODING = \"gpt-3.5-turbo\";\nvar DEFAULT_MAX_TOKENS = 4e3;\nfunction post(endpoint, body, apiKey, proxies, timeout = 60, apiBaseURL) {\n  return __async(this, null, function* () {\n    const url = `${apiBaseURL || BASE_URL}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${apiKey}`,\n      \"X-Client-Source\": \"tavily-js\"\n    };\n    const timeoutInMillis = timeout * 1e3;\n    const config = { headers, timeout: timeoutInMillis };\n    if (proxies) {\n      if (proxies.http) {\n        config.httpAgent = new https_proxy_agent__WEBPACK_IMPORTED_MODULE_1__.HttpsProxyAgent(proxies.http);\n      }\n      if (proxies.https) {\n        config.httpsAgent = new https_proxy_agent__WEBPACK_IMPORTED_MODULE_1__.HttpsProxyAgent(proxies.https);\n      }\n    }\n    return axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(url, body, config);\n  });\n}\nfunction getTotalTokensFromString(str, encodingName = DEFAULT_MODEL_ENCODING) {\n  const encoding = (0,js_tiktoken__WEBPACK_IMPORTED_MODULE_0__.encodingForModel)(encodingName);\n  return encoding.encode(str).length;\n}\nfunction getMaxTokensFromList(data, maxTokens = DEFAULT_MAX_TOKENS) {\n  var result = [];\n  let currentTokens = 0;\n  for (let item of data) {\n    let itemString = JSON.stringify(item);\n    let newTotalTokens = currentTokens + getTotalTokensFromString(itemString);\n    if (newTotalTokens > maxTokens) {\n      break;\n    }\n    result.push(item);\n    currentTokens = newTotalTokens;\n  }\n  return JSON.stringify(result);\n}\nfunction handleRequestError(res) {\n  var _a, _b, _c, _d;\n  const status = res.status;\n  const message = (_b = (_a = res.data) == null ? void 0 : _a.detail) == null ? void 0 : _b.error;\n  if (!message) {\n    throw new Error(`${status} Error: ${JSON.stringify(res.data)}`);\n  }\n  throw new Error(`${(_d = (_c = res.data) == null ? void 0 : _c.detail) == null ? void 0 : _d.error}`);\n}\nfunction handleTimeoutError(timeout) {\n  throw new Error(`Request timed out after ${timeout} seconds.`);\n}\n\n// src/search.ts\nfunction _search(apiKey, proxies, apiBaseURL) {\n  return function search(_0) {\n    return __async(this, arguments, function* (query, options = {}) {\n      var _b, _c, _d, _e, _f;\n      const _a = options, {\n        searchDepth,\n        topic,\n        days,\n        maxResults,\n        includeImages,\n        includeImageDescriptions,\n        includeAnswer,\n        includeRawContent,\n        includeDomains,\n        excludeDomains,\n        timeRange,\n        chunksPerSource,\n        country,\n        startDate,\n        endDate,\n        autoParameters,\n        timeout,\n        includeFavicon\n      } = _a, kwargs = __objRest(_a, [\n        \"searchDepth\",\n        \"topic\",\n        \"days\",\n        \"maxResults\",\n        \"includeImages\",\n        \"includeImageDescriptions\",\n        \"includeAnswer\",\n        \"includeRawContent\",\n        \"includeDomains\",\n        \"excludeDomains\",\n        \"timeRange\",\n        \"chunksPerSource\",\n        \"country\",\n        \"startDate\",\n        \"endDate\",\n        \"autoParameters\",\n        \"timeout\",\n        \"includeFavicon\"\n      ]);\n      const requestTimeout = timeout ? Math.min(timeout, 120) : 60;\n      try {\n        const response = yield post(\n          \"search\",\n          __spreadValues({\n            query,\n            search_depth: searchDepth,\n            topic,\n            days,\n            max_results: maxResults,\n            include_images: includeImages,\n            include_image_descriptions: includeImageDescriptions,\n            include_answer: includeAnswer,\n            include_raw_content: includeRawContent,\n            include_domains: includeDomains,\n            exclude_domains: excludeDomains,\n            time_range: timeRange,\n            chunks_per_source: chunksPerSource,\n            country,\n            start_date: startDate,\n            end_date: endDate,\n            auto_parameters: autoParameters,\n            include_favicon: includeFavicon\n          }, kwargs),\n          apiKey,\n          proxies,\n          requestTimeout,\n          apiBaseURL\n        );\n        return __spreadValues({\n          query,\n          responseTime: response.data.response_time,\n          images: response.data.images.map((image) => {\n            return {\n              url: (image == null ? void 0 : image.url) || image,\n              description: image.description\n            };\n          }),\n          results: response.data.results.map((result) => {\n            return {\n              title: result.title,\n              url: result.url,\n              content: result.content,\n              rawContent: result.raw_content,\n              score: result.score,\n              publishedDate: result.published_date,\n              favicon: result.favicon\n            };\n          }),\n          answer: response.data.answer,\n          requestId: response.data.request_id\n        }, response.data.auto_parameters && {\n          autoParameters: {\n            includeDomains: (_b = response.data.auto_parameters) == null ? void 0 : _b.include_domains,\n            excludeDomains: (_c = response.data.auto_parameters) == null ? void 0 : _c.exclude_domains,\n            topic: (_d = response.data.auto_parameters) == null ? void 0 : _d.topic,\n            timeRange: (_e = response.data.auto_parameters) == null ? void 0 : _e.time_range,\n            searchDepth: (_f = response.data.auto_parameters) == null ? void 0 : _f.search_depth\n          }\n        });\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(requestTimeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\nfunction _searchQNA(apiKey, proxies, apiBaseURL) {\n  return function searchQNA(_0) {\n    return __async(this, arguments, function* (query, options = {}) {\n      var _a;\n      const requestTimeout = (options == null ? void 0 : options.timeout) ? Math.min(options.timeout, 120) : 60;\n      try {\n        const response = yield post(\n          \"search\",\n          {\n            query,\n            search_depth: (_a = options.searchDepth) != null ? _a : \"advanced\",\n            topic: options.topic,\n            days: options.days,\n            max_results: options.maxResults,\n            include_answer: true,\n            include_domains: options.includeDomains,\n            exclude_domains: options.excludeDomains,\n            chunks_per_source: options.chunksPerSource,\n            include_favicon: options.includeFavicon\n          },\n          apiKey,\n          proxies,\n          requestTimeout,\n          apiBaseURL\n        );\n        const answer = response.data.answer;\n        return answer;\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(requestTimeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\nfunction _searchContext(apiKey, proxies, apiBaseURL) {\n  return function searchContext(_0) {\n    return __async(this, arguments, function* (query, options = {}) {\n      var _a, _b;\n      const timeout = (options == null ? void 0 : options.timeout) ? Math.min(options.timeout, 120) : 60;\n      try {\n        const response = yield post(\n          \"search\",\n          {\n            query,\n            search_depth: options.searchDepth,\n            topic: options.topic,\n            days: options.days,\n            max_results: options.maxResults,\n            include_domains: options.includeDomains,\n            exclude_domains: options.excludeDomains,\n            chunks_per_source: options.chunksPerSource,\n            include_favicon: options.includeFavicon\n          },\n          apiKey,\n          proxies,\n          timeout,\n          apiBaseURL\n        );\n        const sources = ((_a = response.data) == null ? void 0 : _a.results) || [];\n        const context = sources.map((source) => {\n          return {\n            url: source.url,\n            content: source.content\n          };\n        });\n        return JSON.stringify(\n          getMaxTokensFromList(context, (_b = options.maxTokens) != null ? _b : DEFAULT_MAX_TOKENS)\n        );\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(timeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\n\n// src/extract.ts\n\nfunction _extract(apiKey, proxies, apiBaseURL) {\n  return function extract(_0) {\n    return __async(this, arguments, function* (urls, options = {}) {\n      const _a = options, { includeImages, extractDepth, format, timeout, includeFavicon } = _a, kwargs = __objRest(_a, [\"includeImages\", \"extractDepth\", \"format\", \"timeout\", \"includeFavicon\"]);\n      const requestTimeout = timeout ? Math.min(timeout, 120) : 30;\n      try {\n        const response = yield post(\n          \"extract\",\n          __spreadValues({\n            urls,\n            include_images: includeImages,\n            extract_depth: extractDepth,\n            format,\n            include_favicon: includeFavicon,\n            timeout\n          }, kwargs),\n          apiKey,\n          proxies,\n          requestTimeout,\n          apiBaseURL\n        );\n        return {\n          responseTime: response.data.response_time,\n          results: response.data.results.map((result) => {\n            return {\n              url: result.url,\n              rawContent: result.raw_content,\n              images: result.images,\n              favicon: result.favicon\n            };\n          }),\n          failedResults: response.data.failed_results.map((result) => {\n            return {\n              url: result.url,\n              error: result.error\n            };\n          }),\n          requestId: response.data.request_id\n        };\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(requestTimeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\n\n// src/crawl.ts\n\nfunction _crawl(apiKey, proxies, apiBaseURL) {\n  return function crawl(_0) {\n    return __async(this, arguments, function* (url, options = {}) {\n      const _a = options, {\n        maxDepth,\n        maxBreadth,\n        limit,\n        extractDepth,\n        selectPaths,\n        selectDomains,\n        excludePaths,\n        excludeDomains,\n        allowExternal,\n        includeImages,\n        categories,\n        instructions,\n        format,\n        timeout,\n        includeFavicon\n      } = _a, kwargs = __objRest(_a, [\n        \"maxDepth\",\n        \"maxBreadth\",\n        \"limit\",\n        \"extractDepth\",\n        \"selectPaths\",\n        \"selectDomains\",\n        \"excludePaths\",\n        \"excludeDomains\",\n        \"allowExternal\",\n        \"includeImages\",\n        \"categories\",\n        \"instructions\",\n        \"format\",\n        \"timeout\",\n        \"includeFavicon\"\n      ]);\n      const requestTimeout = timeout ? Math.min(timeout, 120) : 60;\n      try {\n        const response = yield post(\n          \"crawl\",\n          __spreadValues({\n            url,\n            max_depth: maxDepth,\n            max_breadth: maxBreadth,\n            limit,\n            extract_depth: extractDepth,\n            select_paths: selectPaths,\n            select_domains: selectDomains,\n            exclude_paths: excludePaths,\n            exclude_domains: excludeDomains,\n            allow_external: allowExternal,\n            include_images: includeImages,\n            categories,\n            instructions,\n            format,\n            include_favicon: includeFavicon\n          }, kwargs),\n          apiKey,\n          proxies,\n          requestTimeout,\n          apiBaseURL\n        );\n        return {\n          responseTime: response.data.response_time,\n          baseUrl: response.data.base_url,\n          results: response.data.results.map((item) => {\n            return {\n              url: item.url,\n              rawContent: item.raw_content,\n              images: item.images,\n              favicon: item.favicon\n            };\n          }),\n          requestId: response.data.request_id\n        };\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(requestTimeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\n\n// src/map.ts\n\nfunction _map(apiKey, proxies, apiBaseURL) {\n  return function map(_0) {\n    return __async(this, arguments, function* (url, options = {}) {\n      const _a = options, {\n        maxDepth,\n        maxBreadth,\n        limit,\n        selectPaths,\n        selectDomains,\n        excludePaths,\n        excludeDomains,\n        allowExternal,\n        categories,\n        instructions,\n        timeout\n      } = _a, kwargs = __objRest(_a, [\n        \"maxDepth\",\n        \"maxBreadth\",\n        \"limit\",\n        \"selectPaths\",\n        \"selectDomains\",\n        \"excludePaths\",\n        \"excludeDomains\",\n        \"allowExternal\",\n        \"categories\",\n        \"instructions\",\n        \"timeout\"\n      ]);\n      const requestTimeout = timeout ? Math.min(timeout, 120) : 60;\n      try {\n        const response = yield post(\n          \"map\",\n          __spreadValues({\n            url,\n            max_depth: maxDepth,\n            max_breadth: maxBreadth,\n            limit,\n            select_paths: selectPaths,\n            select_domains: selectDomains,\n            exclude_paths: excludePaths,\n            exclude_domains: excludeDomains,\n            allow_external: allowExternal,\n            categories,\n            instructions\n          }, kwargs),\n          apiKey,\n          proxies,\n          requestTimeout,\n          apiBaseURL\n        );\n        return {\n          responseTime: response.data.response_time,\n          baseUrl: response.data.base_url,\n          results: response.data.results,\n          requestId: response.data.request_id\n        };\n      } catch (err) {\n        if (err instanceof axios__WEBPACK_IMPORTED_MODULE_3__.AxiosError) {\n          if (err.code === \"ECONNABORTED\") {\n            handleTimeoutError(requestTimeout);\n          }\n          if (err.response) {\n            handleRequestError(err.response);\n          }\n        }\n        throw new Error(\n          `An unexpected error occurred while making the request. Error: ${err}`\n        );\n      }\n    });\n  };\n}\n\n// src/client.ts\nfunction tavily(options) {\n  const apiKey = (options == null ? void 0 : options.apiKey) || process.env.TAVILY_API_KEY;\n  const proxies = (() => {\n    var _a, _b;\n    const http = ((_a = options == null ? void 0 : options.proxies) == null ? void 0 : _a.http) || process.env.TAVILY_HTTP_PROXY;\n    const https = ((_b = options == null ? void 0 : options.proxies) == null ? void 0 : _b.https) || process.env.TAVILY_HTTPS_PROXY;\n    const result = {};\n    if (http) result.http = http;\n    if (https) result.https = https;\n    return Object.keys(result).length > 0 ? result : void 0;\n  })();\n  const apiBaseURL = options == null ? void 0 : options.apiBaseURL;\n  if (!apiKey) {\n    throw new Error(\n      \"No API key provided. Please provide the api_key attribute or set the TAVILY_API_KEY environment variable.\"\n    );\n  }\n  return {\n    search: _search(apiKey, proxies, apiBaseURL),\n    extract: _extract(apiKey, proxies, apiBaseURL),\n    searchQNA: _searchQNA(apiKey, proxies, apiBaseURL),\n    searchContext: _searchContext(apiKey, proxies, apiBaseURL),\n    crawl: _crawl(apiKey, proxies, apiBaseURL),\n    map: _map(apiKey, proxies, apiBaseURL)\n  };\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@tavily/core/dist/index.mjs\n");

/***/ })

};
;